---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ddc-server
  labels:
    app: ddc-server
    app.kubernetes.io/part-of: ddc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ddc-server
  template:
    metadata:
      labels:
        app: ddc-server
        app.kubernetes.io/part-of: ddc
    spec:
      initContainers:
        - name: app-install
          image: fedora:latest
          command: ["/bin/sh", "-c"]
          args:
            - dnf update -y;
              dnf install -y git nodejs;
              git config --global http.sslVerify "false" ;
              git clone https://gelgitlab.race.sas.com/GEL/visualization/ddc-container.git /tmp/ddc-data/ ;
              cd /tmp/ddc-data ;
              npm install ;
              chmod -R 777 /tmp/ddc-data ;
          volumeMounts:
            - mountPath: /tmp/ddc-data
              name: ddc-data
        #- name: git-sync
        #  image: k8s.gcr.io/git-sync:v3.1.5
        #  imagePullPolicy: Always
        #  env:
        #    - name: GIT_SYNC_REPO
        #      value: https://gelgitlab.race.sas.com/GEL/visualization/ddc-container.git
        #    - name: GIT_SYNC_BRANCH
        #      value: master
        #    - name: GIT_SYNC_ROOT
        #      value: /tmp/ddc-data
        #    - name: GIT_SYNC_PERMISSIONS
        #      value: "0777"
        #  securityContext:
        #    runAsUser: 0
        #  volumeMounts:
        #    - mountPath: /tmp/ddc-data
        #      name: ddc-data
        #- name: app-install
        #  image: node:10-alpine
        #  command: ["/bin/sh", "-c"]
        #  args:
        #    - mkdir -p /home/node/ddc-container/node_modules ;
        #      chown -R node:node /home/node/ddc-container ;
        #      cd /home/node/ddc-container ;
        #      npm install ;
        #      chown node:node . . ;
        #  securityContext:
        #    runAsUser: 0
        #  volumeMounts:
        #    - mountPath: /home/node/ddc-container
        #      name: ddc-data
      containers:
        - name: ddc-server
          image: node:10-alpine
          imagePullPolicy: IfNotPresent
          command: ["cd /tmp/ddc-data && chown node:node . . && ls /home/node"]
          #command: ["cd /home/node && chown node:node . . && node /home/node/ddc-app/bin/www""]
          ports:
            - containerPort: 3000
              name: ddc
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
            - mountPath: /tmp/ddc-app
              name: ddc-data
      volumes:
        - name: ddc-data
          emptyDir: {}
---

apiVersion: v1
kind: Service
metadata:
  name: ddc-service
  labels:
    app: ddc-service
    app.kubernetes.io/part-of: ddc
spec:
  ports:
    - name: ddc-port
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: ddc-server
