---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ddc-server
  labels:
    app: ddc-server
    app.kubernetes.io/part-of: ddc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ddc-server
  template:
    metadata:
      labels:
        app: ddc-server
        app.kubernetes.io/part-of: ddc
    spec:
      initContainers:
       # - name: git-sync
       #   image: k8s.gcr.io/git-sync:v3.1.5
       #   imagePullPolicy: Always
       #   env:
       #     - name: GIT_SYNC_REPO
       #       value: https://gelgitlab.race.sas.com/GEL/visualization/ddc-container.git
       #     - name: GIT_SYNC_BRANCH
       #       value: master
       #     - name: GIT_SYNC_ROOT
       #       value: /home/node/app
       #     - name: GIT_SYNC_PERMISSIONS
       #       value: "0777"
       #   securityContext:
       #     runAsUser: 0
        - name: app-install
          image: ubuntu
          command: ["/bin/sh", "-c"]
          args:
            - mkdir -p /home/node/app/node_modules ;
              chown -R node:node /home/node/app ;
              su - node ;
              cd /home/node/app ;
              apt install git nodejs;
              git clone https://gelgitlab.race.sas.com/GEL/visualization/ddc-container.git ;
              npm install ;
              chown node:node . . ;
          securityContext:
            runAsUser: 0
      containers:
        - name: ddc-server
          image: node:10-alpine
          imagePullPolicy: IfNotPresent
          command: ["node /home/node/app/bin/www"]
          ports:
            - containerPort: 3000
              name: ddc
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 50Mi
---

apiVersion: v1
kind: Service
metadata:
  name: ddc-service
  labels:
    app: ddc-service
    app.kubernetes.io/part-of: ddc
spec:
  ports:
    - name: ddc-port
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: ddc-server
